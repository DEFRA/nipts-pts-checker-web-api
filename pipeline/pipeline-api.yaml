name: 'V1-B$(Date:yyyyMMdd)-$(BuildID)'
parameters:
  - name: forceDevDeploy
    displayName: "Force deployment to DEV"
    type: boolean
    default: false
  - name: deployDevSlot
    displayName: "Deploy to DEV Staging Slot?"
    type: boolean
    default: false
  - name: deployTstSlot
    displayName: "Deploy to TST Staging Slot?"
    type: boolean
    default: false
  - name: deployPreSlot
    displayName: "Deploy to Pre-Prod Staging Slot?"
    type: boolean
    default: false
  - name: deployPrdSlot
    displayName: "Deploy to Production Staging Slot?"
    type: boolean
    default: false
  - name: deployToSecondary
    displayName: "Select Secondary Region"
    type: string
    default: PRD
    values:
      - None
      - DEV
      - TST
      - PRE
      - PRD
  - name: runOpenAPIDiff
    displayName: "Run Open Api Diff"
    type: boolean
    default: false
  - name: allowAPIBreakingChanges
    displayName: "Allow breaking API changes"
    type: boolean
    default: false
  - name: runCodeGeneration
    displayName: "Generate Client Libraries?"
    type: boolean
    default: false
  - name: runVulnerabilityScan
    displayName: "Run Vulnerability Scan"
    type: boolean
    default: true
  - name: libraryVersion
    displayName: "Client Library Version Number"
    type: string
    default: '1.0.0'
  - name: qualityGate
    displayName: "Quality Gate parameters"
    type: object
    default:
      enforceQualityGate: true
      warningVariance: 1
      coverageVariance: 1
      coverageType: 'blocks'
      baseBranch: '$(System.PullRequest.TargetBranch)'
      allowWarningVariance: true
      allowCoverageVariance: true

trigger:
  batch: true
  branches:
    include:
      - '*'
  paths:
    include:
      - src/Defra.PTS.Checker.Web.Api/*
      - test/*

resources:
  repositories:
    - repository: PipelineCommon
      name: DEFRA-TRD/Defra.TRD.Pipeline.Common
      type: git
      ref: master
  # pipelines:
  #   - pipeline: INFRA # need to change as per infra
  #     source: Defra.EEHC.Infra EUCerts API WebApp
  #     trigger:
  #       branches:
  #         include:
  #           - '*'
  #       stages:
  #         - DEV

variables:
  APIName: Defra.PTS.Checker.Web.Api

extends:
  template: /templates/basic-webapp-deploy-pipeline.yaml@PipelineCommon
  parameters:
    appName: $(APIName)
    appProject: PTS
    sqlProject: TRS
    appInstanceNumber: $(nc-region-id)03
    buildProjects: |
      **/*Api.csproj
      **/*Tests.csproj
    publishProject: '**/*Api.csproj'
    scr: GH
    appSettingsEnv:
        dev: >-
          -AddressApi:BaseUrl "https://$(internalAPIMUrl)/trade-address-api/v1/"
        snd: >-
          -AddressApi:BaseUrl "https://$(internalAPIMUrl)/trade-address-api/v1/"
        tst: >-
          -AddressApi:BaseUrl "https://$(internalAPIMUrl)/trade-address-api/v1/"
        pre: >-
          -AddressApi:BaseUrl "https://$(internalAPIMUrl)/trade-address-api/v1/"
        prd: >-
          -AddressApi:BaseUrl "https://$(internalAPIMUrl)/trade-address-api/v1/"
    connectionStrings: '[{"name": "sql_db", "value": "Server=tcp:$(sqlServerName),1433;Database=pet-travel; Authentication=Active Directory Managed Identity;", "type": "SQLAzure", "slotSetting": false}]'
    setupMiUser: 'true'
    forceDevDeploy: ${{ parameters.forceDevDeploy }}
    deployToSecondary: ${{ parameters.deployToSecondary }}
    deployDevSlot: ${{ parameters.deployDevSlot }}
    deployTstSlot: ${{ parameters.deployTstSlot }}
    deployPreSlot: ${{ parameters.deployPreSlot }}
    deployPrdSlot: ${{ parameters.deployPrdSlot }}
    runOpenAPIDiff: ${{ parameters.runOpenAPIDiff }}    
    allowAPIBreakingChanges: ${{ parameters.allowAPIBreakingChanges }}
    codeGeneration:
      ApiClientName: 'PTS'
      ApiVersion: 'v1'
      Version: ${{ parameters.libraryVersion }}
      runClientGeneration: ${{ parameters.runCodeGeneration }}
    runSonarScan: true
    # sonarExclusionPaths: 'src/*.Api*/**, src/Defra.PTS.Checker.Web.Api/Program.cs'
    # publishAPIMApi: 
    #   apiConfig: '**/api-config/pts-checker-web-api.yml'
    #   apiProjectName: '$(APIName)'
    #   apiTemplate: 'pts-checker-web-api'
    runHealthCheck: false
    qualityGate: ${{ parameters.qualityGate }}
    skipBuildTests: true
    runVulnerabilityScan: ${{ parameters.runVulnerabilityScan }}